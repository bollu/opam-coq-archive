#!/bin/bash

set -e
#set -x

CACHE=$1
shift

function setup_root() {
  echo .Initializing opam root
  rm -rf $HOME/opam-root-$COMPILER
  tar xzf $CACHE -C /
  eval $(opam env --root=${HOME}/opam-root-$COMPILER --set-root)
  opam update default # make sure we get the latest packages
  echo .Add released repo
  opam repo add released file://$PWD/released
  opam pin list
}

function tail_log() {
  tail -c3M $LOG
}
trap tail_log ERR 

while [ ! -z "$1" ]; do
 if [ -e "$1" ]; then
  case "$1" in
  */opam)
    echo Testing $1
    setup_root	  
    PKG_VERSION_DIR=`dirname "$1"`
    PKG_NAME_VERSION=`basename "$PKG_VERSION_DIR"`
    PKG_VERSION=`echo $PKG_NAME_VERSION | cut -d . -f 2-`
    PKG_NAME=`echo $PKG_NAME_VERSION | cut -d . -f 1`
    LOG=log.`echo $1 | tr '/' '-'`
    > $LOG
    case "$PKG_VERSION" in
    coq*dev|coq*beta*|coqide*dev|coqide*beta*)
      echo Add dev repos
      opam repo add core-dev file://$PWD/core-dev >> $LOG
      opam update core-dev
    ;;
    *dev|*beta*)
      echo Add dev repos
      opam repo add core-dev file://$PWD/core-dev >> $LOG
      opam repo add extra-dev file://$PWD/extra-dev >> $LOG
      opam update core-dev extra-dev
    ;;
    *)
    ;;
    esac
    echo Check if $PKG_NAME_VERSION is compatible with the current environment
    if opam install "$PKG_NAME_VERSION" -y --strict --show-action; then
      echo Installing $PKG_NAME_VERSION
      opam install "$PKG_NAME_VERSION" -y -v -v --strict >> $LOG
      echo Removing $PKG_NAME
      opam remove "$PKG_NAME" -y --strict >> $LOG
    else
      echo Skipping $PKG_NAME_VERSION
    fi
  ;;
  *)
    echo Ignoring $1
    echo
  ;;
  esac
 fi
 shift
done
